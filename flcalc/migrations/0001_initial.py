# Generated by Django 4.2.4 on 2023-08-25 13:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CameraModel',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('f_stop_num', models.FloatField()),
                ('object_distance', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='FStop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='ISO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Lens',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('length', models.CharField(max_length=255)),
                ('fstop_min', models.FloatField()),
                ('fstop_max', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('password', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UserCameraSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('camera_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flcalc.cameramodel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flcalc.user')),
            ],
        ),
        migrations.CreateModel(
            name='ModelLens',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lens_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flcalc.lens')),
                ('model_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flcalc.cameramodel')),
            ],
        ),
        migrations.CreateModel(
            name='ModelFStop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fstop_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flcalc.fstop')),
                ('model_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flcalc.cameramodel')),
            ],
        ),
        migrations.CreateModel(
            name='DSLRCamera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso', models.IntegerField()),
                ('f_stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flcalc.fstop')),
                ('lens', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flcalc.lens')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flcalc.cameramodel')),
            ],
        ),
        migrations.AddField(
            model_name='cameramodel',
            name='f_stops',
            field=models.ManyToManyField(through='flcalc.ModelFStop', to='flcalc.fstop'),
        ),
        migrations.AddField(
            model_name='cameramodel',
            name='lenses',
            field=models.ManyToManyField(through='flcalc.ModelLens', to='flcalc.lens'),
        ),
    ]
